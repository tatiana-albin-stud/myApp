{"ast":null,"code":"var _jsxFileName = \"/Users/practica/Desktop/Practica2023/myappcopy/src/components/Products.js\";\nimport Product from './Product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Products = _ref => {\n  let {\n    products,\n    onDelete,\n    onToggle\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: products.map((product, index) => /*#__PURE__*/_jsxDEV(Product, {\n      product: product,\n      onDelete: onDelete,\n      onToggle: onToggle\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["Product","jsxDEV","_jsxDEV","Fragment","_Fragment","Products","_ref","products","onDelete","onToggle","children","map","product","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/practica/Desktop/Practica2023/myappcopy/src/components/Products.js"],"sourcesContent":["import Product from './Product'\n\nconst Products = ({ products, onDelete, onToggle }) => {\n  return (\n    <>\n      {products.map((product, index) => (\n        <Product key={index} product={product} onDelete={onDelete} onToggle={onToggle} />\n      ))}\n    </>\n  )\n}\n\nexport default Products\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,QAAQ,GAAGC,IAAA,IAAsC;EAAA,IAArC;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAChD,oBACEJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,EACGH,QAAQ,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BX,OAAA,CAACF,OAAO;MAAaY,OAAO,EAAEA,OAAQ;MAACJ,QAAQ,EAAEA,QAAS;MAACC,QAAQ,EAAEA;IAAS,GAAhEI,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB;EAAC,iBACD;AAEP,CAAC;AAAAC,EAAA,GARKb,QAAQ;AAUd,eAAeA,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}